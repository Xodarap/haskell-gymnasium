name: gym-hs
version: 0.1.0.0
synopsis: Haskell bindings for OpenAI Gymnasium
description: |
  A Haskell library that provides bindings to OpenAI Gymnasium environments.
  This library enables you to call any Gymnasium environment from Haskell code
  with a simple, type-safe API. It uses subprocess-based communication to
  interface with Python's Gymnasium library, providing full access to the
  rich ecosystem of reinforcement learning environments.
  .
  Features:
  .
  * Simple, type-safe API for Gymnasium environments
  * Full interoperability with Python Gymnasium
  * Automatic resource management and cleanup
  * Support for all standard Gymnasium environments
  * JSON-based communication for reliability
homepage: https://github.com/gym-hs/gym-hs
bug-reports: https://github.com/gym-hs/gym-hs/issues
license: MIT
license-file: LICENSE
author: gym-hs contributors
maintainer: gym-hs@example.com
copyright: 2025 gym-hs contributors
category: AI, Machine Learning, Reinforcement Learning
build-type: Custom
custom-setup:
  dependencies:
  - base
  - Cabal
  - process
extra-source-files:
- README.md
- CHANGELOG.md
tested-with: GHC==9.2.5, GHC==9.4.8, GHC==9.6.3

source-repository:
  type: git
  location: https://github.com/gym-hs/gym-hs

dependencies:
- base >= 4.7 && < 5
- process >= 1.6
- aeson >= 2.0
- bytestring >= 0.10
- text >= 1.2
- vector >= 0.12
- containers >= 0.6
- unordered-containers >= 0.2
- scientific >= 0.3

ghc-options:
- -Wall
- -Wcompat
- -Widentities
- -Wincomplete-record-updates
- -Wincomplete-uni-patterns
- -Wmissing-export-lists
- -Wmissing-home-modules
- -Wpartial-fields
- -Wredundant-constraints

library:
  source-dirs: src
  exposed-modules:
  - Gym.Core
  - Gym.Environment
  other-modules:
  - Gym.Internal.Python

executables:
  gym-hs-example:
    main: Main.hs
    source-dirs: app
    dependencies:
    - gym-hs

tests:
  gym-hs-test:
    main: Spec.hs
    source-dirs: test
    dependencies:
    - gym-hs
    - hspec >= 2.7
    ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N